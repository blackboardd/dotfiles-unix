#!/usr/bin/bash


function gitlab-path() {
    PROJECT_ROOT=$(git remote get-url origin | grep -oP '(?<=:).+(?=\.git)')
    PROJECT_BRANCH=$(git branch --show-current)

    echo "https://gitlab.com/$PROJECT_ROOT/-/tree/$PROJECT_BRANCH"
}

function commit() {
    route=$1
    hash=$2
    echo "https://github.com/$route/commit/$hash" | xclip -selection clipboard
}

function whatport() {
    sudo lsof -i :"$1"
}

function move_to_config_env {
    if [ "$1" = "on" ]; then
        export GIT_DIR=$HOME/.cfg
        export GIT_WORK_TREE=$HOME
        return
    fi

    if [ "$1" = "off" ]; then
        export GIT_DIR=
        export GIT_WORK_TREE=
        return
    fi
}

# recursively replace line in all files
function recrep() {
    FROM=$1
    TO=$2
    EXT=$3

    if [ "$EXT" = "" ]; then
        find . -type f -print0 | xargs -0 sed -i '' -e "s/$FROM/$TO/g"
    else
        find . -type f -name "*.$EXT" -print0 | xargs -0 sed -i '' -e "s/$FROM/$TO/g"
    fi
}

function catless() {
    output=$(cat "$1")
    nvim_commands=()

    filename=$(echo "$1" | sed -E 's/ /_/g' | sed -E 's/[^a-zA-Z0-9_\-\.]//g')
    hash=$(date +%s%3N | base64)

    ext=$(echo "$filename" | rev | cut -d'.' -f1 | rev)

    if [ "$ext" = "json" ]; then
        output=$("$output" | jq .)
    fi

    mkdir -p ~/.nvim-less-cache/"$hash"
    echo "$output" > ~/.nvim-less-cache/"$hash"/"$filename"
    nvim_commands+=(nvim -R ~/.nvim-less-cache/"$hash"/"$filename")


    if [[ "$filename" == diff* ]]; then
        nvim_commands+=(-c "'set filetype=diff'")
    fi

    "${nvim_commands[@]}"
}

function gctp() {
    git config user.email 'brightenqtompkins@gmail.com'
    git config core.sshCommand "ssh -i ~/.ssh/id_ed25519_git_personal -F /dev/null" 
    git config user.signingkey "$GIT_SIGNING_KEY_PERSONAL"
}

function parse_query() {
    QUERY=$1

    for p in ${QUERY//&/ };do kvp=( ${p/=/ } ); k=${kvp[0]};v=${kvp[1]};eval $k=$v;done
}

function cpmeta() {
    from=$1
    to=$2
    extension=$(echo "$from" | rev | cut -d'.' -f1 | rev)
    
    ffmpeg -i "$from" -f ffmetadata meta.txt  
    ffmpeg -i "$to" -i meta.txt -map_metadata 1 -codec copy "tmp_copied_final.$extension"
    mv -f "tmp_copied_final.$extension" "$to"
    rm meta.txt
}
